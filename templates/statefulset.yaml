apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lnd.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "lnd.name" . }}
    helm.sh/chart: {{ include "lnd.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "lnd.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "lnd.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/config-lnd.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/lnd"]
          {{- if .Values.lnd.unlock.enabled }}
          envFrom:
            - secretRef:
                name: {{ .Values.lnd.unlock.walletSecret }}
          lifecycle:
            postStart:
              exec:
                command: ["/root/.lnd/post-start.sh"]
          {{- end }}
          ports:
            - name: rest
              containerPort: {{ .Values.services.api.restPort }}
              protocol: TCP
            - name: rpc
              containerPort: {{ .Values.services.api.rpcPort }}
              protocol: TCP
            - name: p2p
              containerPort: {{ .Values.services.p2p.port }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /root/.lnd/health.sh
            initialDelaySeconds: 10
          readinessProbe:
            exec:
              command:
              - /root/.lnd/health.sh
            initialDelaySeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: data
            mountPath: /root/.lnd/data
          - name: logs
            mountPath: /root/.lnd/logs
          - name: lnd-conf
            mountPath: /root/.lnd
          {{- if .Values.lnd.keystoreSecret }}
          - name: certs
            mountPath: /root/.lnd/data/certs
            readOnly: true
          {{- end }}
          {{- if .Values.lnd.macaroonstoreSecret }}
          - name: macaroons
            mountPath: /root/.lnd/data/macaroons
            readOnly: true
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: lnd-conf
        configMap:
          name: {{ template "lnd.fullname" . }}
          items:
          - key: lnd.conf
            path: lnd.conf
          - key: health.sh
            path: health.sh
            mode: 0744
          {{- if .Values.lnd.unlock.enabled }}
          - key: post-start.sh
            path: post-start.sh
            mode: 0744
          {{- end }}
      - name: logs
        emptyDir: {}
      {{- if .Values.lnd.keystoreSecret }}
      - name: certs
        secret:
          secretName: "{{ .Values.lnd.keystoreSecret }}"
          defaultMode: 448
          items:
          - key: tls.key
            path: tls.key
          - key: tls.cert
            path: tls.cert
      {{- end }}
      {{- if .Values.lnd.macaroonstoreSecret }}
      - name: macaroons
        secret:
          secretName: "{{ .Values.lnd.macaroonstoreSecret }}"
          defaultMode: 448
          items:
          - key: admin.macaroon
            path: admin.macaroon
          - key: readonly.macaroon
            path: readonly.macaroon
          - key: invoice.macaroon
            path: invoice.macaroon
      {{- end }}
  {{- if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
  {{- end }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
    {{- end }}
    {{- end }}
      resources:
        requests:
          storage: "{{ .Values.persistence.size }}"
  {{- end }}
