{{ $lnd := and .Values.lnd.prometheus.enabled .Values.lnd.prometheus.serviceMonitor.enabled }}
{{ $lndmon := and .Values.lndmon.enabled .Values.lndmon.prometheus.serviceMonitor.enabled  }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lnd.fullname" . }}
  labels:
    {{- include "lnd.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "lnd.selectorLabels" . | nindent 6 }}
  serviceName: {{ .Values.serviceName | default .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "lnd.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/config-lnd.yaml") . | sha256sum }}
    spec:
      {{- if not .Values.lnd.keystoreSecret }}
      initContainers:
        - name: lnd-init
          image: busybox
          command: ["mkdir", "-p", "/root/.lnd/data/certs"]
          volumeMounts:
          - name: data
            mountPath: /root/.lnd/data
      {{- end }}
      containers:
        - name: lnd
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/lnd"]
          {{- if .Values.lnd.unlock.enabled }}
          envFrom:
            - secretRef:
                name: {{ .Values.lnd.unlock.walletSecret }}
          lifecycle:
            postStart:
              exec:
                command: ["/root/post-start.sh"]
          {{- end }}
          ports:
            - name: rest
              containerPort: {{ .Values.services.api.restPort }}
              protocol: TCP
            - name: rpc
              containerPort: {{ .Values.services.api.rpcPort }}
              protocol: TCP
            - name: p2p
              containerPort: {{ .Values.services.p2p.port }}
              protocol: TCP
            - name: metrics-lnd
              containerPort: 9092
              protocol: TCP
          {{- if .Values.lnd.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
              - /root/health.sh
            initialDelaySeconds: 10
          {{- end }}
          {{- if .Values.lnd.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
              - /root/health.sh
            initialDelaySeconds: 10
          {{- end }}
          resources:
            {{- toYaml .Values.lnd.resources | nindent 12 }}
          volumeMounts:
          - name: data
            mountPath: /root/.lnd/data
          - name: logs
            mountPath: /root/.lnd/logs
          - name: lnd-conf
            mountPath: /root/.lnd
          - name: lnd-scripts
            mountPath: /root
          {{- if .Values.lnd.keystoreSecret }}
          - name: certs
            mountPath: /root/.lnd/data/certs
            readOnly: true
          {{- end }}
        {{- if .Values.lndmon.enabled }}
        - name: lndmon
          image: "{{ .Values.lndmon.image.repository }}:{{ .Values.lndmon.image.tag }}"
          imagePullPolicy: {{ .Values.lndmon.image.pullPolicy }}
          args:
          - --prometheus.listenaddr={{ .Values.lndmon.prometheus.listen }}
          {{- if .Values.lndmon.prometheus.logdir }}- --prometheus.logdir={{ .Values.lndmon.prometheus.logdir }} {{ end }}
          {{- if .Values.lndmon.prometheus.maxlogfiles }}- --prometheus.maxlogfiles={{ .Values.lndmon.prometheus.maxlogfiles }} {{ end }}
          {{- if .Values.lndmon.prometheus.maxlogfilesize }}- --prometheus.maxlogfilesize={{ .Values.lndmon.prometheus.maxlogfilesize }} {{ end }}
          - --lnd.host=127.0.0.1:{{ .Values.services.api.rpcPort }}
          - --lnd.network={{ .Values.bitcoin.network }}
          - --lnd.tlspath=/root/.lnd/data/certs/tls.cert
          - --lnd.macaroondir=/root/.lnd/data/chain/bitcoin/{{ .Values.bitcoin.network }}
          ports:
            - name: metrics-lndmon
              containerPort: 9093
              protocol: TCP
          {{- if .Values.lndmon.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics-lndmon
          {{- end }}
          {{- if .Values.lndmon.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics-lndmon
          {{- end }}
          resources:
            {{- toYaml .Values.lndmon.resources | nindent 12 }}
          volumeMounts:
          - name: data
            mountPath: /root/.lnd/data
        {{- end }}
        {{- if .Values.lndbackup.enabled }}
        - name: lndbackup
          image: "{{ .Values.lndbackup.image.repository }}:{{ .Values.lndbackup.image.tag }}"
          imagePullPolicy: {{ .Values.lndbackup.image.pullPolicy }}
          args:
          - --rpc-host=127.0.0.1
          - --rpc-port={{ .Values.services.api.rpcPort }}
          - --network={{ .Values.bitcoin.network }}
          - --tls-cert-path=/root/.lnd/data/certs/tls.cert
          - --macaroon-dir=/root/.lnd/data/chain/bitcoin/{{ .Values.bitcoin.network }}
          - --bucket-url={{ .Values.lndbackup.bucketUrl }}
          {{- if eq .Values.lndbackup.provider "gcs" }}
          env:
            - name: "GOOGLE_APPLICATION_CREDENTIALS"
              value: /var/run/secret/cloud.google.com/{{ .Values.lndbackup.gcs.keyFilename }}
          {{- end }}
          volumeMounts:
          - name: data
            mountPath: /root/.lnd/data
          {{- if eq .Values.lndbackup.provider "gcs" }}
          - name: "service-account"
            mountPath: "/var/run/secret/cloud.google.com"
          {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: lnd-conf
        configMap:
          name: {{ template "lnd.fullname" . }}-conf
      - name: lnd-scripts
        configMap:
          name: {{ template "lnd.fullname" . }}-scripts
          defaultMode: 0775
      - name: logs
        emptyDir: {}
      {{- if .Values.lnd.keystoreSecret }}
      - name: certs
        secret:
          secretName: "{{ .Values.lnd.keystoreSecret }}"
          defaultMode: 448
          items:
          - key: tls.key
            path: tls.key
          - key: tls.cert
            path: tls.cert
      {{- end }}
      {{- if eq .Values.lndbackup.provider "gcs" }}
      - name: "service-account"
        secret:
          secretName: {{ .Values.lndbackup.gcs.secretName }}
      {{- end }}
  {{- if not .Values.lnd.persistence.enabled }}
      - name: data
        emptyDir: {}
  {{- end }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  {{- if .Values.lnd.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - {{ .Values.lnd.persistence.accessMode | quote }}
    {{- if .Values.lnd.persistence.storageClass }}
    {{- if (eq "-" .Values.lnd.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.lnd.persistence.storageClass }}"
    {{- end }}
    {{- end }}
      resources:
        requests:
          storage: "{{ .Values.lnd.persistence.size }}"
  {{- end }}
